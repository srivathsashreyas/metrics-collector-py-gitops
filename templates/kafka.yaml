apiVersion: v1
kind: Service
metadata:
  name: kafka
  labels:
    app: kafka
spec:
  clusterIP: None
  ports:
    - name: plaintext
      port: 9092
      targetPort: 9092
    - name: controller
      port: 9093
      targetPort: 9093
  selector:
    app: kafka

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  serviceName: kafka
  replicas: {{ .Values.kafka.replicas }}
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: {{ .Values.kafka.image }}
          ports:
            - containerPort: 9092
            - containerPort: 9093
          env:
            # define environment variables for the broker (responsible for storing and serving messages)
            # and the controller (which acts as the cluster's brain, responsible for storing metadata, leader 
            # election in the cluster, monitoring broker health etc.)
            - name: KAFKA_NODE_ID
              value: "1"
            # obtain cluster id by running the following command
            # podman run --rm confluentinc/cp-kafka:7.6.0 kafka-storage random-uuid
            - name: CLUSTER_ID
              value: "3l2WCkmWTnmkPfyN3x8gmg"
            - name: KAFKA_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://:9092,CONTROLLER://:9093"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka-0.kafka.default.svc.cluster.local:9092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: "1@kafka-0.kafka.default.svc.cluster.local:9093"
            - name: KAFKA_LOG_DIRS
              value: "/var/lib/kafka/data"
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka/data
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi


## to access the kafka pod and run kafka commands, use the following command
# to start a kafka-client pod
# 1. Initial setup if the pod isn't running: kubectl run kafka-client --restart="Never" --image=confluentinc/cp-kafka:7.6.0 -- sleep infinity
# 2. If the pod is already running: kubectl exec -it kafka-client -- bash
# 3. Run kafka commands inside the pod, e.g., to list topics (1) and to consume messages from the 'metrics' topic (2):
#    1. kafka-topics --bootstrap-server kafka-0.kafka.default.svc.cluster.local:9092 --list
#    2. kafka-console-consumer --topic metrics --from-beginning --bootstrap-server kafka-0.kafka.default.svc.cluster.local:9092 
##